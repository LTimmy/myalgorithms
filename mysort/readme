这是总结了三种简单排序：插入，选择，冒泡排序以及希尔排序，堆排序，归并排序，快速排序等常见排序的代码。
1.简单选择排序：每一趟从待排序的数据元素中选择最小（或最大）的一个元素为首元素，为不稳定排序。时间复杂度为O(n^2)
2.冒泡排序：基本思想是对相邻元素进行两两比较，顺序相反则进行交换，这样，每一趟都会将最大的或最小的元素“浮”到顶端，最终达到完全有序。是稳定排序，时间复杂度为O(n^2)
3.插入排序：每一趟实现一个元素左边的数都比它小，右边的数都比它大，最终实现完全有序。再好情况下，需要比较n次无需交换，时间复杂度为O(n)，最差情况下，时间复杂仍为O(n^2)

4.希尔排序：
	希尔排序也是一种插入排序，是简单插入排序经过改进后的一个更高效的版本，也称为缩小增量排序。该算法是冲破O(n^2)的第一种排序算法之一。
基本思想：希尔排序是把记录按下标的一定增量分组，对每一组使用直接插入排序。随着增量逐渐减小，每一组包含的关键词越来越多，增量减小到1时，整个文件恰好被分成一组，算法终止。
	希尔排序在数组中采用跳跃式分组策略，通过某个增量将数组元素划分为若干组，然后分组进行插入排序。随后逐步缩小增量，继续按组进行插入排序，直到增量为1.
	通过这种策略使得整个数组在初始阶段，达到宏观上看基本有序，小的基本在前，大的进本在后。然后缩小增量，当增量为1时，只需要做微调，不会涉及过多的数据移动。增量gap=length/2，缩小增量以gap=gap/2的方式。
5.堆排序：
	堆排序是利用堆这种数据结构而设计的。是一种选择排序（每次选择最大的与末尾元素进行交换），它的最好最坏，平均时间复杂度都为O(logn),它是不稳定的排序。
	堆是具有以下性质的完全二叉树，每个节点的值都大于或等于其左右孩子节点的值称为大顶堆，否则称为小顶堆。
	堆排序思想：将待排序序列构成一个大顶堆，此时，整个序列的最大值为堆顶的根节点。将其与末尾元素进行交换。此时末尾为最大值，然后将剩余n-1个元素值重新构成一个堆。
	完全二叉树特点：叶子节点只可能在最大的两层上出现，对于任意节点，若其右分支下的子孙最大层为L，则其左分支下的子孙最大层必为L或L+1。
	时间复杂度为O(nlogn)
